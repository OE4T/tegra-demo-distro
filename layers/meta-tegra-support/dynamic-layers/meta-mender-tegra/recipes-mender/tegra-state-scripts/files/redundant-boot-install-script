#!/bin/sh

mnt=
LABELCHARS="AB"
COPY_MACHINE_ID=@COPY_MACHINE_ID@

cleanup() {
    [ -n "$mnt" ] || return
    for d in sys proc dev; do
	if mountpoint -q "${mnt}/${d}"; then
	    umount "${mnt}/${d}" >/dev/null 2>&1 || true
	fi
    done
    if mountpoint -q "$mnt"; then
        umount "$mnt" >/dev/null 2>&1 || true
    fi
    rmdir "$mnt" >/dev/null 2>&1 || true
}

echo "Installing NVIDIA bootloader update payload"

if which tegra-boot-control >/dev/null 2>&1; then
    current_slot=`tegra-boot-control --current-slot`
else
    current_slot=`nvbootctrl get-current-slot`
fi
echo "Current boot slot: $current_slot"
otherslot=`expr 1 - $current_slot`
cfglbl="\"RootfsPart${LABELCHARS:$otherslot:1}\""
devnam=`grep -h "$cfglbl:" /etc/mender/mender.conf /var/lib/mender/mender.conf | cut -d: -f2 | cut -d, -f1 | tr -d '" '`
if [ -z "$devnam" ]; then
    echo "ERR: could not determine device name for boot slot $otherslot" >&2
    exit 1
fi
mnt=`mktemp -d -t nvbup.XXXXXX`
if [ -z "$mnt" -o ! -d "$mnt" ]; then
    echo "ERR: could not create directory for mounting install partition" >&2
    exit 1
fi
mount "$devnam" "$mnt"
if [ ! -d "${mnt}/opt/ota_package" ]; then
    echo "ERR: Missing /opt/ota_package directory in installed rootfs" >&2
    cleanup
    exit 1
fi
# tegra-bootloader-update needs access to these filesystems,
# so bind-mount them into the new rootfs for the chroot
mount --bind /sys "${mnt}/sys"
mount --bind /proc "${mnt}/proc"
mount --bind /dev "${mnt}/dev"
if ! chroot "${mnt}" /usr/bin/tegra-bootloader-update /opt/ota_package/bl_update_payload; then
    echo "ERR: bootloader update failed" >&2
    cleanup
    exit 1
fi
echo "Successful bootloader update"
if [ -n "$COPY_MACHINE_ID" ]; then
    curid=$(systemd-machine-id-setup --print)
    storedid=$(chroot "${mnt}" /usr/bin/tegra-bootinfo -n -v machine_id 2>/dev/null)
    if [ "$curid" != "$storedid" ]; then
	chroot "${mnt}" /usr/bin/tegra-bootinfo --initialize 2>/dev/null
	chroot "${mnt}" /usr/bin/tegra-bootinfo -V machine_id "$curid"
    fi
fi
cleanup
exit 0