#!/bin/sh

mnt=
UBOOTVARS="bootcount mender_boot_part mender_boot_part_hex upgrade_available"
ubvarfile=
install_fwenv=

cleanup() {
    [ -n "$mnt" ] || return
    for d in sys proc dev run; do
	if mountpoint -q "${mnt}/${d}"; then
	    umount "${mnt}/${d}" >/dev/null 2>&1 || true
	fi
    done
    if mountpoint -q "$mnt"; then
        umount "$mnt" >/dev/null 2>&1 || true
    fi
    rmdir "$mnt" >/dev/null 2>&1 || true
}

save_vars() {
    local v
    ubvarfile=$(mktemp -p "$1" ubvars.XXXXXX)
    for v in $UBOOTVARS; do
 	    fw_printenv $v >>$ubvarfile
    done
}

echo "Installing NVIDIA bootloader update payload"

new_boot_part=`fw_printenv -n mender_boot_part`
mnt=`mktemp -d -t nvbup.XXXXXX`
if [ -z "$mnt" -o ! -d "$mnt" ]; then
    echo "ERR: could not create directory for mounting install partition" >&2
    exit 1
fi
mount /dev/mmcblk0p${new_boot_part} "$mnt"
if [ ! -d "${mnt}/opt/ota_package" ]; then
    echo "ERR: Missing /opt/ota_package directory in installed rootfs" >&2
    cleanup
    exit 1
fi
# tegra-bootloader-update needs access to these filesystems,
# so bind-mount them into the new rootfs for the chroot
mount --bind /sys "${mnt}/sys"
mount --bind /proc "${mnt}/proc"
mount --bind /dev "${mnt}/dev"
mount -t tmpfs tmpfs "${mnt}/run"

# Check for u-boot environment location change; save vars for restoration
# into the new environment after the update
if [ -e "$mnt/usr/share/u-boot/fw_env.config" ]; then
    if ! diff -qbi /etc/fw_env.config $mnt/usr/share/u-boot/fw_env.config > /dev/null 2>&1; then
        save_vars "${mnt}/run"
        install_fwenv=yes
    fi
fi

if ! chroot "${mnt}" /usr/bin/tegra-bootloader-update --dry-run /opt/ota_package/bl_update_payload >/dev/null 2>&1; then
    # If the tool reports that the version partitions are corrupted, this is an update on a tegra210
    # device with the old partition layout where the U-Boot environment overwrote the version partition(s),
    # in which case we recover via complete initialization.
    if chroot "${mnt}" /usr/bin/tegra-bootloader-update --dry-run /opt/ota_package/bl_update_payload 2>&1 | grep -q 'version partitions are corrupted'; then
        # For the recoverable case, we will have also detected a change the U-Boot environment change
        if [ -n "$install_fwenv" ]; then
            echo "Detected bootloader partition upgrade, reinitializing" >&2
            if ! chroot "${mnt}" /usr/bin/tegra-bootloader-update --initialize /opt/ota_package/bl_update_payload; then
                echo "ERR: bootloader re-initialization failed" >&2
                cleanup
                exit 1
            fi
        else
            echo "ERR: cannot perform bootloader update" >&2
            cleanup
            exit 1
        fi
    else
        echo "ERR: cannot perform bootloader update" >&2
        cleanup
        exit 1
    fi
elif ! chroot "${mnt}" /usr/bin/tegra-bootloader-update /opt/ota_package/bl_update_payload; then
    echo "ERR: bootloader update failed" >&2
    cleanup
    exit 1
fi

# If the U-Boot environment config has changed, propagate the important variables
 # to the new environment
if [ -n "$install_fwenv" ]; then
    if ! chroot "${mnt}" /usr/bin/fw_setenv -c /usr/share/u-boot/fw_env.config -s /run/$(basename "$ubvarfile"); then
        echo "ERR: could not restore U-Boot environment after bootloader update" >&2
        cleanup
        exit 1
    fi
    if [ -L /etc/fw_env.config ]; then
        cp $mnt/usr/share/u-boot/fw_env.config $(readlink /etc/fw_env.config)
    fi
fi

echo "Successful bootloader update"
cleanup
exit 0