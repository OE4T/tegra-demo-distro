From 00e90d3e7e940d85a15275ffdb8daf58a3421784 Mon Sep 17 00:00:00 2001
From: Matt Madison <matt@madison.systems>
Date: Fri, 26 Aug 2022 14:10:18 -0700
Subject: [PATCH] Add option to disable build path searches for data files

Signed-off-by: Matt Madison <matt@madison.systems>
---
 CMakeLists.txt                      | 1 +
 modules/core/CMakeLists.txt         | 8 +++++---
 modules/core/src/utils/datafile.cpp | 4 ++++
 3 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index fa409f516c..a3d9b7e019 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -522,6 +522,7 @@ OCV_OPTION(OPENCV_GENERATE_SETUPVARS  "Generate setup_vars* scripts" ON IF (NOT
 OCV_OPTION(ENABLE_CONFIG_VERIFICATION "Fail build if actual configuration doesn't match requested (WITH_XXX != HAVE_XXX)" OFF)
 OCV_OPTION(OPENCV_ENABLE_MEMALIGN     "Enable posix_memalign or memalign usage" ON)
 OCV_OPTION(OPENCV_DISABLE_FILESYSTEM_SUPPORT "Disable filesystem support" OFF)
+OCV_OPTION(OPENCV_DISABLE_BUILD_DIR_SEARCH_PATHS "Exclude build tree from data file searchs" OFF)
 OCV_OPTION(OPENCV_DISABLE_THREAD_SUPPORT "Build the library without multi-threaded code." OFF)
 OCV_OPTION(OPENCV_SEMIHOSTING         "Build the library for semihosting target (Arm). See https://developer.arm.com/documentation/100863/latest." OFF)
 
diff --git a/modules/core/CMakeLists.txt b/modules/core/CMakeLists.txt
index b78bb98162..d559d36b2d 100644
--- a/modules/core/CMakeLists.txt
+++ b/modules/core/CMakeLists.txt
@@ -188,15 +188,17 @@ if(OPENCV_OTHER_INSTALL_PATH)
 ")
 endif()
 
-set(OPENCV_DATA_CONFIG_STR "${OPENCV_DATA_CONFIG_STR}
+if(NOT OPENCV_DISABLE_BUILD_DIR_SEARCH_PATHS)
+  set(OPENCV_DATA_CONFIG_STR "${OPENCV_DATA_CONFIG_STR}
 #define OPENCV_BUILD_DIR \"${CMAKE_BINARY_DIR}\"
 ")
 
-file(RELATIVE_PATH SOURCE_DIR_RELATIVE ${CMAKE_BINARY_DIR} ${CMAKE_SOURCE_DIR})
-set(OPENCV_DATA_CONFIG_STR "${OPENCV_DATA_CONFIG_STR}
+  file(RELATIVE_PATH SOURCE_DIR_RELATIVE ${CMAKE_BINARY_DIR} ${CMAKE_SOURCE_DIR})
+  set(OPENCV_DATA_CONFIG_STR "${OPENCV_DATA_CONFIG_STR}
 #define OPENCV_DATA_BUILD_DIR_SEARCH_PATHS \\
     \"${SOURCE_DIR_RELATIVE}/\"
 ")
+endif()
 
 if(WIN32)
   file(RELATIVE_PATH INSTALL_DATA_DIR_RELATIVE "${CMAKE_INSTALL_PREFIX}/${OPENCV_BIN_INSTALL_PATH}" "${CMAKE_INSTALL_PREFIX}/${OPENCV_OTHER_INSTALL_PATH}")
diff --git a/modules/core/src/utils/datafile.cpp b/modules/core/src/utils/datafile.cpp
index 3af83a5d8f..ff207d682d 100644
--- a/modules/core/src/utils/datafile.cpp
+++ b/modules/core/src/utils/datafile.cpp
@@ -281,6 +281,7 @@ cv::String findDataFile(const cv::String& relative_path,
 
     // Steps: 4, 5, 6
     cv::String cwd = utils::fs::getcwd();
+#if defined OPENCV_BUILD_DIR && defined OPENCV_DATA_BUILD_DIR_SEARCH_PATHS
     cv::String build_dir(OPENCV_BUILD_DIR);
     bool has_tested_build_directory = false;
     if (isSubDirectory(build_dir, cwd) || isSubDirectory(utils::fs::canonical(build_dir), utils::fs::canonical(cwd)))
@@ -303,6 +304,7 @@ cv::String findDataFile(const cv::String& relative_path,
         }
         has_tested_build_directory = true;
     }
+#endif
 
     cv::String source_dir;
     cv::String try_source_dir = cwd;
@@ -341,6 +343,7 @@ cv::String findDataFile(const cv::String& relative_path,
         CV_LOG_INFO(NULL, "Can't detect module binaries location");
     }
 
+#if defined OPENCV_BUILD_DIR && defined OPENCV_DATA_BUILD_DIR_SEARCH_PATHS
     if (!has_tested_build_directory &&
         (isSubDirectory(build_dir, module_path) || isSubDirectory(utils::fs::canonical(build_dir), utils::fs::canonical(module_path)))
     )
@@ -362,6 +365,7 @@ cv::String findDataFile(const cv::String& relative_path,
             }
         }
     }
+#endif
 
 #if defined OPENCV_INSTALL_DATA_DIR_RELATIVE
     if (!module_path.empty())  // require module path
-- 
2.34.1

